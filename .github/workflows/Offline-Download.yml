name: Offline Download
on:
  workflow_dispatch:
    inputs:
      Tool:
        type: choice
        description: '下载器'
        required: true
        options: [aria, transmission]
        default: aria
      tracker:
        type: choice
        description: 'aria是否自定义tracker'
        required: true
        options: [true, false]
        default: true
      BT:
        description: '磁力链接或文件直链'
        required: false
      HTTP:
        description: '种子下载直链链接'
        required: false
      choice:
        description: 'BT文件选择 例: --select-file=2,4,5,10,12'
        required: false
      Token-Aliyun:
        description: 'Aaliyuntoken'
        required: false
      OnedriveDir:
        description: 'Onedrive上传路径'
        required: false

jobs:
  OfflineDownload:
    runs-on: ubuntu-latest
    steps:
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          df -h
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          df -h
      - uses: actions/checkout@v3
      - name: Download
        run: |
          mkdir Server_Upload
          cd Server_Upload
          if [ -n "${{ github.event.inputs.BT }}" ]; then
            if [[ "${{ inputs.Tool }}" == *aria* ]]; then
              sudo apt install -y aria2
              if [[ "${{ inputs.tracker }}" == *true* ]]; then
                aria2c '${{ github.event.inputs.BT }}' --bt-tracker="$(cat "/home/runner/work/Offline_Downloads/Offline_Downloads/aria/tracker_list.txt" | tr '\n' ',' | sed 's/,$//')" --seed-time=0 --max-connection-per-server=16
              else
                aria2c '${{ github.event.inputs.BT }}' --seed-time=0 --max-connection-per-server=16
              fi
            else
              sudo apt install -y transmission-cli
              transmission-cli "${{ github.event.inputs.BT }}"
            fi
          else
            if [[ "${{ inputs.Tool }}" == *aria* ]]; then
              sudo apt install -y aria2
              wget "${{ github.event.inputs.HTTP }}" -O 1.torrent
              if [[ "${{ inputs.tracker }}" == *true* ]]; then
                aria2c 1.torrent --bt-tracker="$(cat "/home/runner/work/Offline_Downloads/Offline_Downloads/aria/tracker_list.txt" | tr '\n' ',' | sed 's/,$//')" --seed-time=0${{ github.event.inputs.choice }} --max-connection-per-server=16
              else
                aria2c 1.torrent --seed-time=0${{ github.event.inputs.choice }} --max-connection-per-server=16
              fi
            else
              sudo apt install -y transmission-cli
              transmission-cli "${{ github.event.inputs.HTTP }}"
            fi
          fi
          ls
          rm -rf 1.torrent
          rm -rf *.aria
          ls
          df -h
      - name: Upload
        run: |
          ls
          if [ -n "${{ github.event.inputs.Token-Aliyun }}" ]; then
            cd /home/runner/work/Offline_Downloads/Offline_Downloads/aliyunpan-v0.2.7-linux-amd64
            ./aliyunpan login -RefreshToken=${{ github.event.inputs.Token-Aliyun }}
            ./aliyunpan upload /home/runner/work/Offline_Downloads/Offline_Downloads/Server_Upload /影视
            ./aliyunpan logout -y
          else
            cd OnedriveCli
            mv /home/runner/work/Offline_Downloads/Offline_Downloads/Server_Upload /home/runner/work/Offline_Downloads/Offline_Downloads/OnedriveCli
            chmod +x OneDriveUploader
            if [ -n "${{ github.event.inputs.OnedriveDir }}" ]; then
              ./OneDriveUploader -s "Server_Upload" -r "${{ github.event.inputs.OnedriveDir }}"
            else
              ./OneDriveUploader -s "Server_Upload"
            fi  
          fi
