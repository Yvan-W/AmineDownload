name: Offline Download With Rename
run-name: ${{ inputs.RenameFolder }}
on:
  workflow_dispatch:
    inputs:
      Link:
        description: '磁力、直链、种子'
        required: false
      tracker:
        type: choice
        description: 'aria是否自定义tracker'
        required: true
        options: [true, false]
        default: true
      choice:
        description: 'aria BT文件选择 注意示例，只支持种子例: 2,4,5,10,12或 1-34'
        required: false
      Seed:
        type: choice
        description: 'aria 自定义播种时间(min) 0为不播种，建议播种，人人为我我为人人'
        required: true
        options: [0, 60, 120, 180, 240, 300]
        default: 60
      RenameFolder:
        description: 重命名下载文件夹名称
        required: true
      RenameFile:
        description: 是否针对番剧等进行规则化重命名，是则直接填命令（多条以换行符分割），否则不填 命令示例：Get-ChildItem -Filter "*[01]*.ass" | Rename-Item -NewName {'.ass'}
        required: false
      UploadDisk:
        type: choice
        description: '阿里云盘或Onedrive'
        required: true
        options: [Aliyun, Onedrive]
        default: Aliyun
      OnedriveDir:
        description: 'Onedrive自定义上传路径'
        required: false

jobs:
  OfflineDownload:
    runs-on: ubuntu-latest
    steps:
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          df -h
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo apt autoremove
          sudo apt autoclean
          sudo apt clean
          sudo rm /var/log/*.log
          sudo rm -rf /tmp/*
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          df -h
          sudo apt-get update -y
          sudo apt-get install powershell -y
      - uses: actions/checkout@v3
      - name: Download
        run: |
          mkdir Server_Upload
          cd Server_Upload
          sudo apt install -y aria2
          if [[ "${{ inputs.tracker }}" == *true* ]]; then
            echo -e "${INFO} Update BT trackers for Aria2" && echo
            bash ${{ github.workspace }}/aria/tracker.sh ${{ github.workspace }}/aria/tracker_list.txt

            if [ -n "${{ inputs.choice }}" ]; then
              aria2c '${{ inputs.Link }}' --bt-tracker="$(cat "${{ github.workspace }}/aria/tracker_list.txt" | tr '\n' ',' | sed 's/,$//')" --seed-time=${{ inputs.Seed }} -s 64 -x 16 --select-file=${{ inputs.choice }} --bt-remove-unselected-file=true
            else
              aria2c '${{ inputs.Link }}' --bt-tracker="$(cat "${{ github.workspace }}/aria/tracker_list.txt" | tr '\n' ',' | sed 's/,$//')" --seed-time=${{ inputs.Seed }} -s 64 -x 16
            fi 

          else

            if [ -n "${{ inputs.choice }}" ]; then
              aria2c '${{ inputs.Link }}' --seed-time=${{ inputs.Seed }} -s 64 -x 16 --select-file=${{ inputs.choice }} --bt-remove-unselected-file=true
            else
              aria2c '${{ inputs.Link }}' --seed-time=${{ inputs.Seed }} -s 64 -x 16
            fi 

          fi
          ls
          find . -type f \( -name "*.torrent" -o  -name "*.lnk" -o -name "*.txt" -o -name "*.aria2" -o -name "*.cht.ass" -o -name "*.tc.ass" \) -exec rm {} +
          ls
          df -h
      - name: Get download folder name
        id: get_folder_name
        working-directory: ${{ github.workspace }}/Server_Upload
        run: |
          download_folder=$(ls -d */ | head -n 1 | cut -f1 -d'/')
          echo "Download folder name: $download_folder"
          echo "::set-output name=folder_name::$download_folder"
      - name: Rename download folder
        working-directory: ${{ github.workspace }}/Server_Upload
        run: |
          download_folder="${{ steps.get_folder_name.outputs.folder_name }}"
          mv "$download_folder" "${{ inputs.RenameFolder }}"
      - name: RenameFile
        working-directory: ${{ github.workspace }}/Server_Upload/${{ inputs.RenameFolder }}
        if: ${{ inputs.RenameFile != '' }}
        run: |
          echo "${{ inputs.RenameFile }}" > commands.ps1
          chmod +x commands.ps1
          pwsh -File commands.ps1
          rm -rf commands.ps1
      - name: Upload
        run: |
          ls
          if [[ "${{ inputs.UploadDisk }}" == *Aliyun* ]]; then
            cd ${{ github.workspace }}/aliyunpan
            ./aliyunpan login -RefreshToken=${{ secrets.ALIYUNTOKEN }}
            ./aliyunpan upload ${{ github.workspace }}/Server_Upload /影视
            ./aliyunpan logout -y
          else
            cd OnedriveCli
            mv ${{ github.workspace }}/Server_Upload ${{ github.workspace }}/OnedriveCli
            chmod +x OneDriveUploader
            if [ -n "${{ inputs.OnedriveDir }}" ]; then
              ./OneDriveUploader -s "Server_Upload" -r "${{ inputs.OnedriveDir }}"
            else
              ./OneDriveUploader -s "Server_Upload"
            fi  
          fi